"""Initial migration

Revision ID: 40b823e83a47
Revises: 
Create Date: 2024-08-27 15:58:58.854042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40b823e83a47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('days', 'time_in',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('days', 'time_out',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('employee_images', 'image_url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employee_images', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employee_images', 'device_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employee_images', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employee_images', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.drop_constraint('employee_images_employee_id_fkey', 'employee_images', type_='foreignkey')
    op.create_foreign_key(None, 'employee_images', 'employees', ['employee_id'], ['id'])
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employees', 'phone_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('employees', 'position_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employees', 'filial_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.create_foreign_key(None, 'employees', 'working_graphics', ['working_graphic_id'], ['id'])
    op.alter_column('filials', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('filials', 'address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('filials', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('filials', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('positions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('positions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('positions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('positions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('positions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('positions', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('filials', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('filials', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('filials', 'address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('filials', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.alter_column('employees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employees', 'filial_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employees', 'position_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employees', 'phone_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'employee_images', type_='foreignkey')
    op.create_foreign_key('employee_images_employee_id_fkey', 'employee_images', 'employees', ['employee_id'], ['id'], ondelete='CASCADE')
    op.alter_column('employee_images', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employee_images', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('employee_images', 'device_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employee_images', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employee_images', 'image_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('days', 'time_out',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('days', 'time_in',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
